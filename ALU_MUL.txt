library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

ENTITY ALU_MUL IS
	PORT(	dA :   IN STD_LOGIC_VECTOR(31 downto 0);
		dB :  IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
		product :  OUT  STD_LOGIC_VECTOR(63 DOWNTO 0)
		);
END ENTITY ALU_MUL;

ARCHITECTURE behav OF ALU_MUL IS
	BEGIN
	process(dA, dB)
	variable result, temp, toResult:  STD_LOGIC_VECTOR(63 downto 0);
	variable add, sub, zeroes : STD_LOGIC_VECTOR(31 downto 0);
	begin
		add := dA;
		sub := (0 - dA);
		result := x"0000000000000000";
		zeroes := x"00000000";
		for i in 0 to 31 loop
			if (i = 0) then
				if (dB(0) = '1') then
					toResult(31 downto 0):= sub;
				end if;
			else 
				if (dB(i) = '1' and dB(i-1) = '0') then
					toResult:= zeroes & sub;
				elsif (dB(i) = '0' and dB(i-1) = '1') then
					toResult:= zeroes & add;
				else
					toResult := zeroes & zeroes;
				end if;
			end if;
			
		--Sign Extension
			if (toResult(31) = '1') then
				toResult(63 downto 32) := x"FFFFFFFF";
			elsif (toResult(31) = '0') then
				toResult(63 downto 32) := x"00000000";
			end if;
			toResult := STD_LOGIC_VECTOR(SHIFT_LEFT(UNSIGNED(toResult), i));
			result := result + toResult;
		end loop;
		output <= result;
	end process;
END ARCHITECTURE behav;

