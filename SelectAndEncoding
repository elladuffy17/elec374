module and5(a, b, z);
	input [3:0] a;
	input b;
	output [3:0] z;
	
	assign z = a & b;
endmodule

module or12(a, b, c,  z); // not sure if modul has to be adjusted based on the fact that 3
	input [3:0] a, b, c;
	output [3:0] z;
	
	assign z = a | b | c; // selecting the appropriate 4-bit fields for Ra, Rb, and Rc in the IR register
endmodule

module and2(a, b, z);
	input a, b;
	output z;
	
	assign z = a&b;
endmodule

module or2(a, b, z);
	input a, b;
	output z;
	
	assign z = a|b;
endmodule 

// based on 0-15 output R0-R15 is selected
module decoder4t16(a, z);
	input [3:0] a;
	output [15:0] z;
	parameter tempParam = 16'b0000_0000_0000_0001; // parameter is a type that allows it to be reused with diff specification (new vals)
	assign z = (a == 4'b0000) ? tempParam   :
               (a == 4'b0001) ? tempParam<<1: 
               (a == 4'b0010) ? tempParam<<2:
               (a == 4'b0011) ? tempParam<<3:
               (a == 4'b0100) ? tempParam<<4:
               (a == 4'b0101) ? tempParam<<5:
               (a == 4'b0110) ? tempParam<<6:
               (a == 4'b0111) ? tempParam<<7:
               (a == 4'b1000) ? tempParam<<8:
               (a == 4'b1001) ? tempParam<<9:
               (a == 4'b1010) ? tempParam<<10:
               (a == 4'b1011) ? tempParam<<11:
               (a == 4'b1100) ? tempParam<<12:
               (a == 4'b1101) ? tempParam<<13:
               (a == 4'b1110) ? tempParam<<14:
               (a == 4'b1111) ? tempParam<<15: 16'bxxxx_xxxx_xxxx_xxxx;
endmodule 

// this module will be selecting the proper registers to send to the datapath based on IR
// The BAout (base address) signal, when asserted, gates 0â€™s onto the bus if R0 is selected ****
module SelectAndEncode(Gra, Grb, Grc, Rin, Rout, BAout, Ra, Rb, Rc, R0out, R1out, R2out, R3out, R4out, R5out, 
							  R6out, R7out, R8out, R9out, R10out, R11out, R12out, R13out, R14out, R15out, R0in, R1in, 
							  R2in, R3in, R4in, R5in,  R6in, R7in, R8in, R9in, R10in, R11in, R12in, R13in, R14in, R15in); 
	input Gra, Grb, Grc, Rin, Rout, BAout; // Gra/Grc/Rin/Rout/BAout --> external inputs until phase 3 will be gen by Control Unit
	input [3:0] Ra, Rb, Rc; //From IR
	output reg R0out, R1out, R2out, R3out, R4out, R5out, R6out, R7out, R8out, R9out, R10out, R11out, R12out, R13out, R14out, 
			 R15out, R0in, R1in, R2in, R3in, R4in, R5in,  R6in, R7in, R8in, R9in, R10in, R11in, R12in, R13in, R14in, R15in;
	
	reg [3:0] AndAOut, AndBOut, AndCOut, DecIn; // the 3 4bit outputs to go into OR12
	reg [15:0] DecOut;
	reg  BARorOut; // BAout | Rout output wire 
	// predecoder selection
	and5 RaAND(Ra, Gra, ANDAOut);
	and5 RbAND(Rb, Grb, ANDBOut);
   and5 RcAND(Rc, Grc, ANDCOut);
	or12 DecORin(AndAOut, AndBOut, AndcOut, DecIn);
	// 4->16 decoder
	decoder4t16(DecIn, DecOut);
	//R0out-R15out & Rin
	and2 R0ANDIN(Rin, DecOut[0], R0in);
	and2 R1ANDIN(Rin, DecOut[1], R1in);
	and2 R2ANDIN(Rin, DecOut[2], R2in);
	and2 R3ANDIN(Rin, DecOut[3], R3in);
	and2 R4ANDIN(Rin, DecOut[4], R4in);
	and2 R5ANDIN(Rin, DecOut[5], R5in);
	and2 R6ANDIN(Rin, DecOut[6], R6in);
	and2 R7ANDIN(Rin, DecOut[7], R7in);
	and2 R8ANDIN(Rin, DecOut[8], R8in);
	and2 R9ANDIN(Rin, DecOut[9], R9in);
	and2 R10ANDIN(Rin, DecOut[10], R10in);
	and2 R11ANDIN(Rin, DecOut[11], R11in);
	and2 R12ANDIN(Rin, DecOut[12], R12in);
	and2 R13ANDIN(Rin, DecOut[13], R13in);
	and2 R14ANDIN(Rin, DecOut[14], R14in);
	and2 R15ANDIN(Rin, DecOut[15], R15in);
	//R0out-R15out & BARorOut
	and2 R0ANDOUT(BARorOut,DecOut[0], R0out);
	and2 R1ANDOUT(BARorOut,DecOut[1], R1out);
	and2 R2ANDOUT(BARorOut,DecOut[2], R2out);
	and2 R3ANDOUT(BARorOut,DecOut[3], R3out);
	and2 R4ANDOUT(BARorOut,DecOut[4], R4out);
	and2 R5ANDOUT(BARorOut,DecOut[5], R5out);
	and2 R6ANDOUT(BARorOut,DecOut[6], R6out);
	and2 R7ANDOUT(BARorOut,DecOut[7], R7out);
	and2 R8ANDOUT(BARorOut,DecOut[8], R8out);
	and2 R9ANDOUT(BARorOut,DecOut[9], R9out);
	and2 R10ANDOUT(BARorOut,DecOut[10], R10out);
	and2 R11ANDOUT(BARorOut,DecOut[11], R11out);
	and2 R12ANDOUT(BARorOut,DecOut[12], R12out);
	and2 R13ANDOUT(BARorOut,DecOut[13], R13out);
	and2 R14ANDOUT(BARorOut,DecOut[14], R14out);
	and2 R15ANDOUT(BARorOut,DecOut[15], R15out);
endmodule
